- name: Set firewall
  hosts: servers
  gather_facts: no
  remote_user: geo
  become_method: sudo
  vars:
    repo_url: https://github.com/geo-kalo/containers.git
    ansible_python_interpreter: /usr/bin/python3
    parent_interface: "ens18"
    repo_dest: /home/geo/firewall
    working_dir_controller: /tmp/gg
    systemd_units:
      - "firewall-network.service"
      - "firewall.service"
      - "set-default-route.service"
      - "webserver.service"
  tasks:

    - name: Clone Git repository to controller node
      git:
              repo:  "{{ repo_url }}"
              dest: "{{ working_dir_controller }}"
              version: main
              clone: yes 
              update: yes
              accept_hostkey: yes
      delegate_to: 127.0.0.1

    - name: Creating directories..
      file: 
        path: "{{ repo_dest }}"
        state: directory
        mode: '0755'
        owner: geo
        group: geo

    - name: Copying add-default-route script..
      copy:
        src: "{{ working_dir_controller }}/firewall/add-default-route"
        dest: "{{ repo_dest }}/"
        mode: '0777'  
      become: yes 

    - name: Copying dockerfile(firewallfile)
      copy:
        src: "{{ working_dir_controller }}/firewall/firewallfile"
        dest: "{{ repo_dest }}/"
        mode: '0555'

    - name: Copying firewall's entrypoint
      copy:
        src: "{{ working_dir_controller }}/firewall/entrypoint.sh"
        dest: "{{ repo_dest }}/"
        mode: '777'

    - name: Copying firewall's initial setup..
      copy:
        src: "{{ working_dir_controller }}/firewall/iptables-rules"
        dest: "{{ repo_dest }}/"
        mode: '0555'
    
    - name: Copying rest of the needed files..
      copy:
        src: "{{ working_dir_controller }}/firewall/resolv.conf"
        dest: "{{ repo_dest }}/"
        mode: '0555'
     
    - name: Copy webserver files
      copy:
        src: /tmp/gg/firewall/{{ item }}
        dest: "{{ repo_dest }}/"
      loop:
        - activate_virtual_env.sh
        - main.py
        - packets
        - ports.conf
        - virtual-fastapi.conf
        - webserver-api
        - webserver-api-entrypoint.sh
      
     
    - name: Build firewall image
      docker_image:
        build:
          path: "{{ repo_dest }}"
          dockerfile: "firewallfile"
        name: "firewall:latest"
        source: build
        tag: latest
        push: no

    - name: Create webserver image
      docker_image:
        build:
          path: "{{ repo_dest }}"
          dockerfile: webserver-api
          network: host
        name: webserver
        source: build
        tag: latest
        push: no
              

    - name: Create Docker pub_net network
      docker_network:
        name: pub_net
        driver: macvlan
        state: present
        ipam_config:
          - subnet: 10.0.48.0/24
            gateway: 10.0.48.1
        driver_options:
          parent: "{{ parent_interface }}"

    - name: Create Docker internal network
      docker_network:
        name: internal
        state: present
        ipam_config:
          - subnet: 192.168.200.0/24

    - name: Copy systemd units to host
      copy:
              #src: "{{ repo_dest }}/{{ item }}"
        src: "{{ working_dir_controller }}/firewall/{{ item }}"
        dest: /etc/systemd/system/
      loop: "{{ systemd_units }}"
      become: yes

    - name: Enable systemd units
      systemd:
        name: "{{ item }}"
        enabled: yes
      loop: "{{ systemd_units }}"
      become: yes
     
    - name: Copy systemd grafana unit to host
      copy:
        src: "{{ working_dir_controller }}/firewall/grafana.service"
        dest: /etc/systemd/system/
      become: yes
  
    - name: Enable systemd grafana unit
      systemd:
        name: grafana.service
        enabled: yes
      become: yes
      register: result
      until: result.failed == False 
      retries: 3
      delay: 5
      ignore_errors: yes

    - name: reload systemd's conf
      shell: systemctl daemon-reload
      when: result.failed
      become: yes

    - name: Create working dir for grafana
      file:
              path: /home/geo/grafana-proiekt
              state: directory
              owner: geo

    - name: Copy needed files for ansible grafana
      copy:
              src: "{{ working_dir_controller }}/firewall/prune-monitoring-files" 
              dest: /home/geo/grafana-proiekt/prune-monitoring-files      
              mode: '0777'

    - name: Copy needed files for ansible grafana
      copy:
              src: "{{ working_dir_controller }}/firewall/inventory_grafana"
              dest: /home/geo/grafana-proiekt/inventory
              
    - name: Copy needed files for ansible grafana
      copy:
              src: "{{ working_dir_controller }}/firewall/ansible.cfg"
              dest: /home/geo/grafana-proiekt/ansible.cfg

    - name: Copy needed files for ansible grafana
      copy:
              src: "{{ working_dir_controller }}/grafana-proiekt/set_git_fixed.yml"
              dest: /home/geo/grafana-proiekt/set_git_fixed.yml


    - name: Reboot configured systems
      reboot:
        msg: "Rebooting machine"  
      become: yes
