---
- name: Set up Telegraf Influx Grafana (GIT)
  hosts: servers
  gather_facts: yes
  become_method: sudo
  remote_user: geo
  vars:
    ansible_python_interpreter: /usr/bin/python3
    repo_url: https://github.com/geo-kalo/containers.git
    repo_dest: /tmp/grafana  # Update this to your desired path
    docker_network: internal
    subnet: 192.168.200.0/24
  tasks:
    - name: Fixing socket permissions
      shell: chmod 777 /var/run/docker.socket
      become: yes 

    - name: Clone the Git repository
      git:
        repo: "{{ repo_url }}"
        dest: "{{ repo_dest }}"
        version: main
        clone: yes
        update: yes
        accept_hostkey: yes  # Optional, to auto-accept host key

    - name: Build myowncloud image
      docker_image:
        build:
                path: "{{ repo_dest }}/grafana-proiekt/owndockerfile"
        name: "myowncloud:latest"
        source: build
        tag: latest
        push: no

    - name: Build myinflux image
      docker_image:
        build: 
          path: "{{ repo_dest }}/grafana-proiekt/influxdockerfile"
        name: "myinflux:latest"
        source: build
        tag: latest
        push: no

    - name: Build mytelegraf image
      docker_image:
        build: 
          path: "{{ repo_dest }}/grafana-proiekt/telegrafdockerfile"
        name: "mytelegraf:latest"
        source: build
        tag: latest
        push: no

    - name: Build mygrafana image
      docker_image:
        build: 
          path: "{{ repo_dest }}/grafana-proiekt/grafanadockerfile"
          network: host 
        name: mygrafana
        source: build
        tag: latest
        push: no
        #buildargs:
        #  --network: host

    - name: Create  Docker Network
      docker_network:
        name: "{{ docker_network }}"
        state: present
        ipam_config:
          - subnet: "{{ subnet }}"

    - name: Create volumes
      docker_volume:
        name: "{{ item }}"
      loop:
        - data-owncloud
        - apps-owncloud
        - config-owncloud
        - connection_info
        - influxdb2-config
        - influxdb2-data

    - name: Run owncloud container
      docker_container:
        name: myowncloud
        state: started
        image: myowncloud
        networks:
          - name: "{{ docker_network }}"
        volumes:
          - data-owncloud:/var/www/html/data
          - apps-owncloud:/var/www/html/apps
          - config-owncloud:/var/www/html/config
        ports:
          - "80:80"

    - name: Run myinfluxv2 container
      docker_container:
        name: myinfluxv2
        state: started
        image: myinflux
        networks:
          - name: "{{ docker_network }}"
        volumes:
          - influxdb2-data:/var/lib/influxdb2
          - influxdb2-config:/etc/influxdb2
          - connection_info:/connection_info
        ports:
          - "8086:8086"

    - name: processing...
      wait_for:
        timeout: 30

    - name: Run grafana container
      docker_container:
        name: grafana
        state: started
        image: mygrafana
        networks:
          - name: "{{ docker_network }}"
        volumes:
          - connection_info:/connection_info
        ports:
          - "3000:3000"

    - name: processing...
      wait_for:
        timeout: 15

    - name: Run mytelegraf container
      docker_container:
        name: mytelegraf
        state: started
        image: mytelegraf
        networks:
          - name: "{{ docker_network }}"
        privileged: yes
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - connection_info:/connection_info
        ports:
          - "8125:8125"

